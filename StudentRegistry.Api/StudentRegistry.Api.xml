<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StudentRegistry.Api</name>
    </assembly>
    <members>
        <member name="T:StudentRegistry.Api.Configuration.ApiKeyMiddleware">
            <summary>
            Represents a class that handles API key authentication.
            </summary>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ApiKeyMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:StudentRegistry.Api.Configuration.ApiKeyMiddleware"/> class.
            </summary>
            <param name="next">The next request delegate.</param>
            <param name="configuration">The configuration settings.</param>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ApiKeyMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="T:StudentRegistry.Api.Configuration.ApiKeyMiddlewareExtensions">
            <summary>
            Extension methods for configuring API key middleware.
            </summary>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ApiKeyMiddlewareExtensions.UseApiKeyMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds API key middleware to the application's request pipeline.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> instance.</param>
            <param name="configuration">The configuration settings.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> instance.</returns>
        </member>
        <member name="T:StudentRegistry.Api.Configuration.ServiceCollectionExtensions">
            <summary>
            Static class used to add layers of services to the ASP.NET core service collection.
            </summary>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ServiceCollectionExtensions.ConfigureApiServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add configuration api services.
            </summary>
            <param name="services">ASP.NET core service collection.</param>
            /// <param name="configuration">Configuration settings.</param>
            <returns>ASP.NET core service collection.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ServiceCollectionExtensions.AddBusinessServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add business layer services.
            </summary>
            <param name="services">ASP.NET core service collection.</param>
            <returns>ASP.NET core service collection.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Configuration.ServiceCollectionExtensions.AddDataServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add data access services and initialize Db context.
            </summary>
            <param name="services">ASP.NET core service collection.</param>
            <param name="configuration">Configuration settings.</param>
            <returns>ASP.NET core service collection.</returns>
        </member>
        <member name="T:StudentRegistry.Api.Controllers.StudentsController">
            <summary>
            Students controller with authentication.
            </summary>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.#ctor(StudentRegistry.Services.Students.IStudentsService)">
            <summary>
            Initializes a new instance of the <see cref="T:StudentRegistry.Api.Controllers.StudentsController"/> class.
            Students controller constructor.
            </summary>
            <param name="studentsService">students service.</param>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.AddStudent(StudentRegistry.Services.Students.Models.StudentInput)">
            <summary>Create a new student.</summary>
            <param name="studentInput">Student data input.</param>
            <response code ="201">Returns created.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="500">Returns a server error.</response>
            <remarks>Student.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.GetAllStudents">
            <summary>Returns all existing students.</summary>
            <response code ="200">Returns all students.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="500">Returns a server error.</response>
            <remarks>Students.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.GetStudent(System.Int32)">
            <summary>Returns an existing student.</summary>
            <response code ="200">Returns student.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="500">Returns a server error.</response>
            <remarks>Student.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.UpdateStudent(System.Int32,StudentRegistry.Services.Students.Models.StudentInput)">
            <summary>Update an existing student.</summary>
            <response code ="200">Returns updated student.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="500">Returns a server error.</response>
            <param name="id">id student to update.</param>
            <param name="studentInput">Student data input.</param>
            <remarks>Student.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.DeleteStudent(System.Int32)">
            <summary>Remove Student.</summary>
            <response code ="200">Returns Ok.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="404">Returns a KeyNotFound by Student id.</response>
            <response code ="500">Returns a server error.</response>
            <param name="id">id student to delete.</param>
            <remarks>Student.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StudentRegistry.Api.Controllers.StudentsController.GetStudentsExcelReport(System.Nullable{System.DateTime})">
            <summary>Return an excel report of students.</summary>
            <param name="createDate">Create date to filter students.</param>
            <response code ="200">Return excel report of students.</response>
            <response code ="401">Returns an Unauthorized Error.</response>
            <response code ="403">Returns a Forbidden Error.</response>
            <response code ="500">Returns a server error.</response>
            <remarks>Students.</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
